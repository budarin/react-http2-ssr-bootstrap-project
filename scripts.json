[
    {
        "name": "start-client",
        "command": "webpack-dev-server --mode development --config ./config/webpack/client/webpack.config.babel.js",
        "env": {
            "NODE_ENV": "development"
        }
    },
    {
        "name": "server-compile",
        "command": "webpack --config ./config/webpack/server/webpack.config.babel.js",
        "env": {
            "NODE_ENV": "development"
        }
    },
    {
        "name": "server-monitoring",
        "command": "nodemon -w dist/server.js dist/server.js",
        "env": {
            "NODE_ENV": "development"
        }
    },
    {
        "name": "ensureServerIsCreated",
        "command": "node ./tools/ensureServerIsCreated.js"
    },
    {
        "name": "start-server",
        "command":
            "prun ensureServerIsCreated && concurrently --kill-others \"prun server-compile\" \"prun server-monitoring\"",
        "env": {
            "NODE_ENV": "development",
            "DEBUG": "app:*"
        }
    },
    {
        "name": "server-build",
        "command": "webpack --config ./config/webpack/server/webpack.config.prod.babel.js",
        "env": {
            "NODE_ENV": "production"
        }
    },
    {
        "name": "client-build",
        "command": "webpack --config ./config/webpack/client/webpack.config.prod.babel.js",
        "env": {
            "NODE_ENV": "production"
        }
    },
    {
        "name": "clean",
        "command": "rimraf ./.tmp && rimraf ./dist"
    },
    {
        "name": "build",
        "command": "prun clean && webpack --config ./config/webpack/webpack.config.prod.babel.js",
        "env": {
            "NODE_ENV": "production"
        }
    },
    {
        "name": "upgrade",
        "command": "ncu --upgradeAll && npm install"
    },
    {
        "name": "start-all",
        "command": "concurrently --kill-others  \"prun start-client\" \"prun start-server\"",
        "env": {
            "NODE_ENV": "development"
        }
    },
    {
        "name": "test",
        "command": "jest --detectOpenHandles --no-cache  --forceExit ",
        "env": {
            "NODE_ENV": "test",
            "__DEV__": true
        }
    },
    {
        "name": "test-watch",
        "command":
            "jest --watch --onlyChanged --watchman --forceExit --detectOpenHandles --notify --notifyMode=failure",
        "env": {
            "NODE_ENV": "test",
            "__DEV__": true,
            "SHOW_BROWSER": true,
            "JEST_HIDE_USAGE": true,
            "RUN_PUPPETEER_TESTS": true
        }
    },
    {
        "name": "test-puppeteer",
        "command": "jest --detectOpenHandles --no-cache  --forceExit ",
        "env": {
            "SHOW_BROWSER": false,
            "RUN_ONLY_PUPPETEER_TESTS": true
        }
    }
]
